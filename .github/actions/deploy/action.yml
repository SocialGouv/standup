name: "Autodevops deploy using Helm"
description: "Autodevops deploy Helm"
inputs:
  environment:
    default: 'dev'
    description: "The deployment environment (dev | preprod | prod)"
  productionNamespace:
    description: "Override production namesapce"
  rancherId:
    description: "The Rancher project ID, usually secrets.RANCHER_PROJECT_ID"
  socialgouvBaseDomain:
    description: "The base domain name, usually secrets.SOCIALGOUV_BASE_DOMAIN"
runs:
  using: "composite"
  steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup global env vars
      uses: SocialGouv/actions/util-env@v1
      with:
        rancherId: ${{ inputs.rancherId }}
    
    - name: Setup action bin PATH
      shell: bash
      run: echo "${{ github.action_path }}/bin" >> $GITHUB_PATH

    # - name: Setup action's env vars
    #   shell: bash
    #   run: |
    #     echo "FOO=$FOO" >> $GITHUB_ENV
    
    - name: Setup node
      uses: SocialGouv/actions/util-setup-node@v1
      with:
        actionPath: ${{ github.action_path }}

    - name: Generate values file
      shell: bash
      env:
        ENV: ${{ inputs.environment }}
        SOCIALGOUV_BASE_DOMAIN: ${{ inputs.socialgouvBaseDomain || env.SOCIALGOUV_BASE_DOMAIN }}
        SOCIALGOUV_PRODUCTION_NAMESPACE: ${{ inputs.productionNamespace }}
        SOCIALGOUV_PRODUCTION: ${{ inputs.environment == 'prod' && true || '' }}
        SOCIALGOUV_PREPRODUCTION: ${{ inputs.environment == 'preprod' && true || '' }}
        RANCHER_PROJECT_ID: ${{ inputs.rancherId || env.RANCHER_PROJECT_ID }}
      run: yarn --cwd ${{ github.action_path }} run -s values > values-${{ inputs.environment }}.yaml

    - name: Archive values
      uses: actions/upload-artifact@v2
      with:
        name: values-${{ inputs.environment }}.yaml
        path: values-${{ inputs.environment }}.yaml

    - name: Generate manifest
      shell: bash
      run: |
        helm template -f values-${{ inputs.environment }}.yaml . > manifest-${{ inputs.environment }}.yaml

    - name: Archive manifest
      uses: actions/upload-artifact@v2
      with:
        name: manifest-${{ inputs.environment }}.yaml
        path: manifest-${{ inputs.environment }}.yaml

    - name: Write kubeconfig
      uses: SocialGouv/actions/util-write-kubeconfig@v1
      with:
        kubeconfig: ${{ inputs.kubeconfig }}

    - name: Apply manifest
      shell: bash
      run: |
        kubectl apply -f manifest-${{ inputs.environment }}.yaml

    # - name: Wait for Deployment
    #   shell: bash
    #   run: |
    #     DEPLOYMENTS=$(cat manifests-${{ inputs.environment }}.yml | yq eval-all '.metadata.name')
    #     kubectl -n $NAMESPACE rollout status deployment 
    