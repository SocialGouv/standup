name: "Autodevops deploy using Helm"
description: "Autodevops deploy Helm"
inputs:
  environment:
    default: 'dev'
    description: "The deployment environment (dev | preprod | prod)"
  kubeconfig:
    description: "The Kubernetes authentication configuration"
  token:
    description: "The Github authentication token"
  productionNamespace:
    description: "Override production namesapce"
  rancherId:
    description: "The Rancher project ID, usually secrets.RANCHER_PROJECT_ID"
  socialgouvBaseDomain:
    description: "The base domain name, usually secrets.SOCIALGOUV_BASE_DOMAIN"
runs:
  using: "composite"
  steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup global env vars
      uses: SocialGouv/actions/util-env@v1
      with:
        rancherId: ${{ inputs.rancherId }}
    
    - name: Setup action bin PATH
      shell: bash
      run: echo "${{ github.action_path }}/bin" >> $GITHUB_PATH

    # - name: Setup action's env vars
    #   shell: bash
    #   run: |
    #     echo "FOO=$FOO" >> $GITHUB_ENV
    
    - name: Setup node
      uses: SocialGouv/actions/util-setup-node@v1
      with:
        actionPath: ${{ github.action_path }}

    - name: Generate values file
      shell: bash
      env:
        ENV: ${{ inputs.environment }}
        SOCIALGOUV_BASE_DOMAIN: ${{ inputs.socialgouvBaseDomain || env.SOCIALGOUV_BASE_DOMAIN }}
        SOCIALGOUV_PRODUCTION_NAMESPACE: ${{ inputs.productionNamespace }}
        SOCIALGOUV_PRODUCTION: ${{ inputs.environment == 'prod' && true || '' }}
        SOCIALGOUV_PREPRODUCTION: ${{ inputs.environment == 'preprod' && true || '' }}
        RANCHER_PROJECT_ID: ${{ inputs.rancherId || env.RANCHER_PROJECT_ID }}
      run: yarn --cwd ${{ github.action_path }} run -s values > values-${{ inputs.environment }}.yaml

    - name: Archive values
      uses: actions/upload-artifact@v2
      with:
        name: values-${{ inputs.environment }}.yaml
        path: values-${{ inputs.environment }}.yaml

    - name: Generate manifest
      shell: bash
      run: |
        helm template -f values-${{ inputs.environment }}.yaml . > manifests-${{ inputs.environment }}.yaml

    - name: Archive manifest
      uses: actions/upload-artifact@v2
      with:
        name: manifests-${{ inputs.environment }}.yaml
        path: manifests-${{ inputs.environment }}.yaml

    - name: Install Kapp
      uses: vmware-tanzu/carvel-setup-action@v1
      with:
        only: kapp
        token: ${{ inputs.token }}

    - name: Write kubeconfig
      uses: SocialGouv/actions/util-write-kubeconfig@v1
      with:
        kubeconfig: ${{ inputs.kubeconfig }}

    - name: Create k8s namespace
      shell: bash
      run: |
        cat manifests-${{ inputs.environment }}.yaml | yq eval 'select(.kind=="Namespace")' - > namespace-${{ inputs.environment }}.yaml

        kubectl create -f namespace-${{ inputs.environment }}.yaml || true
        
        NAMESPACE=$(cat namespace-${{ inputs.environment }}.yaml | yq eval-all ".metadata.name")
        # wait for namespace to be ready
        n=0
        until [ "$n" -ge 10 ]; do
          command && break  # substitute your command here
          namespaceStatus=$(kubectl get ns $NAMESPACE -o json | jq .status.phase -r)
          [ $namespaceStatus == "Active" ] && break
          n=$((n+1)) 
          sleep 1
        done

    # - name: Apply manifests
    #   shell: bash
    #   run: |
    #     kubectl apply -f manifests-${{ inputs.environment }}.yaml

    # - name: Wait for Deployment
    #   shell: bash
    #   run: |
    #     DEPLOYMENTS=$(cat manifests-${{ inputs.environment }}.yaml | yq eval-all 'select(.kind=="Deployment").metadata.name' -)
    #     for DEPLOYMENT in $(echo $DEPLOYMENTS | tr "\-\-\-" "\n"); do
    #       kubectl -n $NAMESPACE rollout status --timeout= deployment $DEPLOYMENT
    #     done
    
    - name: Apply manifests
      shell: bash
      run: |
        project=${GITHUB_REPOSITORY#*/}
        kapp --dangerous-override-ownership-of-existing-resources -y deploy -a $project --namespace ${{ env.namespace }} -f manifests-${{ inputs.environment }}.yaml

    - name: Define environment URL
      id: environment-url
      shell: bash
      run: |
        HOSTS=$(cat manifests-${{ inputs.environment }}.yml | yq eval-all '.spec.rules[] .host')
        HOST=$(echo "$HOSTS" | head -n 1)
        echo $HOST
        echo "::set-output name=url::https://$HOST"

    - name: Notify deployment end
      uses: bobheadxi/deployments@v0.4.3
      with:
        step: finish
        status: ${{ job.status }}
        token: ${{ inputs.token }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: ${{ steps.environment-url.outputs.url }}

    - name: Debug manifests
      uses: SocialGouv/actions/k8s-manifests-debug@v1
      with:
        token: ${{ inputs.token }}
        path: manifests-${{ inputs.environment }}.yml
      env:
        RANCHER_PROJECT_ID: ${{ inputs.rancherId }}