name: Build

on:
  push:
    # branches: [alpha, beta, next]

jobs:
  build:
    name: Build & Register
    runs-on: ubuntu-latest
    # environment:
    #     name: ${GITHUB_REF##*/}-standup
    #     url: https://${GITHUB_REF##*/}-standup.${SOCIALGOUV_KUBE_INGRESS_BASE_DOMAIN}
    steps:
      - name: Get branch name
        run: echo "branch=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Node setup
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Yarn cache setup
        uses: c-hive/gha-yarn-cache@v1

      - name: Install dependencies
        run: |
          yarn --frozen-lockfile --prefer-offline

      - name: Build application
        run: |
          yarn build
          yarn export
        env:
          HASURA_URL: "%%HASURA_URL%%"

      - name: Create image labels and tags
        id: docker_meta
        uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
        with:
          images: ghcr.io/socialgouv/fabrique/standup
          labels: |
            org.opencontainers.image.title=standup
            org.opencontainers.image.documentation=https://github.com/SocialGouv/standup/tree/${{ github.sha }}
          tags: |
            type=sha
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=sha-${{ github.sha }}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true

      - name: Registry authentication
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          password: ${{ secrets.SOCIALGROOVYBOT_GHCR_PAT }}

      - name: Image build and register
        uses: docker/build-push-action@v2
        with:
          context: .
          push: 'true'
          builder: ${{ steps.buildx.outputs.name }}
          tags: "${{ steps.docker_meta.outputs.tags }}"
          labels: "${{ steps.docker_meta.outputs.labels }}"

      - name: Generate k8s manifests
        run: npx @socialgouv/k8s@1.9.0-alpha.12 > manifests.yml
        env:
          SOCIALGOUV_CONFIG_PATH: ${{ github.workspace }}/.socialgouv/config.json
          SOCIALGOUV_KUBE_INGRESS_BASE_DOMAIN: ${{ secrets.SOCIALGOUV_KUBE_INGRESS_BASE_DOMAIN }}

      - name: Archive k8s manifests
        uses: actions/upload-artifact@v2
        with:
          name: manifests.yml
          path: manifests.yml

      - name: Notify deployment start
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          env: ${{ env.branch }}-standup
          token: ${{ secrets.GITHUB_TOKEN }}
          desc: "Deploying environment: ${{ env.branch }}-standup"

      - name: Deploy
        uses: danielr1996/kubectl-action@1.0.0
        with:
          kubeconfig: ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV2 }}
          args: apply -f manifests.yml --namespace ${{ env.branch }}-standup

      - name: Notify deployment end
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://${{ env.branch }}-standup.${{ secrets.SOCIALGOUV_KUBE_INGRESS_BASE_DOMAIN }}
